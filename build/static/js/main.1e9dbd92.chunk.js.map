{"version":3,"sources":["components/ColorHit.js","App.js","index.js"],"names":["ColorHit","handleSubmit","e","preventDefault","document","getElementById","disabled","style","backgroundColor","state","newUser","id","topScores","length","setTimeout","timer","setInterval","total","randomColorDisplay","prevColoringBoxNumber","setState","prevState","concat","clearInterval","handleUsernameChange","name","target","value","handleRestart","coloringBoxNumber","score","Math","trunc","random","clickedBoxId","divStyle","width","height","margin","border","outline","borderRadius","display","onSubmit","this","type","placeholder","onChange","alignSelf","onClick","sort","a","b","slice","map","player","index","key","flexWrap","boxes","i","push","justifyContent","React","Component","App","props","ReactDOM","render"],"mappings":"6NA0KeA,E,YAvKX,aAAc,IAAD,8BACT,+CAkBJC,aAAe,SAACC,GACZA,EAAEC,iBACFC,SAASC,eAAe,aAAaC,UAAW,EAChDF,SAASC,eAAe,SAASC,UAAW,EAC5CF,SAASC,eAAe,SAASE,MAAMC,gBAAkB,OACzD,EAAKC,MAAMC,QAAQC,GAAK,EAAKF,MAAMG,UAAUC,OAAS,EACtDC,YAAY,WACJ,EAAKL,MAAMM,MAAQC,aAAa,WAC7B,EAAKP,MAAMQ,MAAQ,GAClB,EAAKC,sBAGLd,SAASC,eAAe,EAAKI,MAAMU,uBAAuBZ,MAAMC,gBAAkB,WAClF,EAAKY,UAAS,SAACC,GACX,MAAO,CACHT,UAAWS,EAAUT,UAAUU,OAAOD,EAAUX,aAGxDa,cAAc,EAAKd,MAAMM,UAE/B,OACH,OAxCM,EA2CbS,qBAAuB,SAACtB,GACpB,IAAMuB,EAAOvB,EAAEwB,OAAOC,MACtB,EAAKP,UAAU,SAAAC,GAEX,OADAA,EAAUX,QAAQe,KAAOA,EAClB,CACHf,QAASW,EAAUX,aAhDlB,EAqDbkB,cAAgB,WACZL,cAAc,EAAKd,MAAMM,OACzBX,SAASC,eAAe,aAAaC,UAAW,EAChDF,SAASC,eAAe,SAASC,UAAW,EAC5CF,SAASC,eAAe,SAASE,MAAMC,gBAAkB,OACzDJ,SAASC,eAAe,EAAKI,MAAMoB,mBAAmBtB,MAAMC,gBAAkB,WAC9E,EAAKY,UAAS,SAAAC,GACV,MAAO,CACHX,QAAS,CAACC,GAAI,GAAIc,KAAM,GAAIK,MAAO,GACnCb,MAAO,OA9DN,EAmEbC,mBAAqB,WACjBd,SAASC,eAAe,EAAKI,MAAMU,uBAAuBZ,MAAMC,gBAAkB,WAGlF,IADA,IAAIqB,EAAoBE,KAAKC,MAAoB,GAAdD,KAAKE,WAAgB,EAClD,EAAKxB,MAAMU,uBAAyBU,GACtCA,EAAoBE,KAAKC,MAAoB,GAAdD,KAAKE,WAAgB,EAGxD7B,SAASC,eAAewB,GAAmBtB,MAAMC,gBAAkB,MAEnE,EAAKY,UAAU,SAAAC,GACX,MAAO,CACHJ,MAAO,EAAKR,MAAMQ,MAAQ,MAIlCH,YAAY,WACLe,GAAqB,EAAKpB,MAAMyB,cAC/B,EAAKd,UAAU,SAAAC,GAEX,OADAA,EAAUX,QAAQoB,OAAS,EACpB,CAACpB,QAASW,EAAUX,YAGnC,EAAKD,MAAMyB,aAAe,IAC5B,KAEF,EAAKzB,MAAMU,sBAAwB,EAAKV,MAAMoB,kBAAoBA,GA3FlE,EAAKpB,MAAQ,CACTU,sBAAuB,EACvBe,aAAc,EACdjB,MAAO,EACPL,UAAW,CACP,CAACD,GAAI,EAAGc,KAAM,IAAKK,MAAO,GAC1B,CAACnB,GAAI,EAAGc,KAAM,IAAKK,MAAO,GAC1B,CAACnB,GAAI,EAAGc,KAAM,IAAKK,MAAO,GAC1B,CAACnB,GAAI,EAAGc,KAAM,IAAKK,MAAO,GAC1B,CAACnB,GAAI,EAAGc,KAAM,IAAKK,MAAO,IAE9BpB,QAAS,CAACC,GAAI,GAAIc,KAAM,GAAIK,MAAO,GACnCf,MAAO,GACPc,kBAAmB,GAfd,E,sEAgGJ,IAAD,OACEM,EAAW,CACbC,MAAO,QACPC,OAAQ,QACR7B,gBAAiB,WACjB8B,OAAQ,OACRC,OAAQ,OACRC,QAAS,OACTC,aAAc,QAElB,OACI,yBAAK9B,GAAG,2BACJ,yBAAKA,GAAG,sBACJ,yBAAKA,GAAG,iBACJ,oDAEJ,yBAAKA,GAAG,YACJ,sDACA,yBAAKJ,MAAO,CAACmC,QAAS,SAClB,0BAAMC,SAAUC,KAAK3C,cACjB,yCACA,2BAAOU,GAAG,YAAYkC,KAAK,OAAOlB,MAAOiB,KAAKnC,MAAMC,QAAQe,KAAMqB,YAAY,qBAAqBC,SAAUH,KAAKpB,uBAClH,2BAAOb,GAAG,QAAQkC,KAAK,SAASlB,MAAM,WAE1C,4BAAQpB,MAAO,CAAC8B,OAAQ,OAAQW,UAAW,YAAaC,QAASL,KAAKhB,eAAtE,aAGR,yBAAKjB,GAAG,aACJ,8CACA,6BACA,4BAEQiC,KAAKnC,MAAMG,UAAUsC,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAEtB,MAAQqB,EAAErB,SAAOuB,MAAM,EAAE,GAAGC,KAAK,SAACC,EAAOC,GAE1E,OAAO,wBAAIC,IAAKF,EAAO5C,GAAIA,GAAG,cAAc,4BAAK6C,EAAQ,EAAI,KAAMD,EAAO9B,MAAU,4BAAK8B,EAAOzB,cAMpH,yBAAKnB,GAAG,iBACJ,6BACI,mDAEJ,6BACI,6BACA,yBAAKJ,MAAO,CAACmC,QAAS,OAAQgB,SAAU,SAE/B,WAEG,IADA,IAAMC,EAAQ,GADX,WAEKC,GACJD,EAAME,KAAK,4BAAQtD,MAAO4B,EAAUsB,IAAKG,EAAGjD,GAAIiD,EAAGX,QAAU,WACzD,EAAKxC,MAAMyB,aAAe0B,OAF1BA,EAAI,EAAGA,GAAK,EAAGA,IAAK,EAApBA,GAKR,OAAOD,EAPV,IAWT,8BAEJ,yBAAKpD,MAAO,CAACmC,QAAS,OAAQoB,eAAgB,kBAC1C,qCAAWlB,KAAKnC,MAAMC,QAAQoB,OAC9B,0CAAgB,GAAKc,KAAKnC,MAAMQ,c,GAhKjC8C,IAAMC,WCQdC,MANf,SAAaC,GACX,OACE,kBAAC,EAAD,O,MCDJC,IAASC,OAAO,kBAAC,EAAD,MAAShE,SAASC,eAAe,U","file":"static/js/main.1e9dbd92.chunk.js","sourcesContent":["import React from 'react'\n\nclass ColorHit extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            prevColoringBoxNumber: 1,\n            clickedBoxId: 0,\n            total: 0,\n            topScores: [\n                {id: 1, name: 'A', score: 9},\n                {id: 2, name: 'B', score: 4},\n                {id: 3, name: 'C', score: 7},\n                {id: 4, name: 'D', score: 3},\n                {id: 5, name: 'E', score: 0}\n            ],\n            newUser: {id: '', name: '', score: 0},\n            timer: '',\n            coloringBoxNumber: 0\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        document.getElementById('userInput').disabled = true\n        document.getElementById('start').disabled = true\n        document.getElementById('start').style.backgroundColor = 'gray'\n        this.state.newUser.id = this.state.topScores.length + 1\n        setTimeout( () => {\n                this.state.timer = setInterval( () => {\n                if(this.state.total < 10){\n                    this.randomColorDisplay()\n                    \n                }else {\n                    document.getElementById(this.state.prevColoringBoxNumber).style.backgroundColor = 'darkgray'\n                    this.setState((prevState) => {\n                        return {\n                            topScores: prevState.topScores.concat(prevState.newUser),\n                        }\n                    })\n                    clearInterval(this.state.timer)\n                }\n            },700)\n        }, 1500)\n    }\n\n    handleUsernameChange = (e) => {\n        const name = e.target.value\n        this.setState( prevState => {\n            prevState.newUser.name = name\n            return {\n                newUser: prevState.newUser\n            }\n        })\n    }\n\n    handleRestart = () => {\n        clearInterval(this.state.timer)\n        document.getElementById('userInput').disabled = false\n        document.getElementById('start').disabled = false\n        document.getElementById('start').style.backgroundColor = 'blue'\n        document.getElementById(this.state.coloringBoxNumber).style.backgroundColor = 'darkgray'\n        this.setState(prevState => {\n            return {\n                newUser: {id: '', name: '', score: 0},\n                total: 0\n            }\n        })\n    }\n\n    randomColorDisplay = () => {\n        document.getElementById(this.state.prevColoringBoxNumber).style.backgroundColor = 'darkgray'\n\n        let coloringBoxNumber = Math.trunc(Math.random()*10) || 1\n        while(this.state.prevColoringBoxNumber == coloringBoxNumber){\n            coloringBoxNumber = Math.trunc(Math.random()*10) || 1\n        }\n                      \n        document.getElementById(coloringBoxNumber).style.backgroundColor = 'red'\n        \n        this.setState( prevState => {\n            return {\n                total: this.state.total + 1\n            }\n        })\n        \n        setTimeout( () => {\n            if(coloringBoxNumber == this.state.clickedBoxId){                     \n                this.setState( prevState => {\n                    prevState.newUser.score += 1\n                    return {newUser: prevState.newUser}\n                })\n            }\n            this.state.clickedBoxId = 0\n        },900)\n        \n        this.state.prevColoringBoxNumber = this.state.coloringBoxNumber = coloringBoxNumber\n    }\n\n    render(){\n        const divStyle = {\n            width: '100px',\n            height: '100px',\n            backgroundColor: 'darkgray',\n            margin: '20px',\n            border: 'none',\n            outline: 'none',\n            borderRadius: '10px'\n        }\n        return (\n            <div id=\"userInfo-game-topScores\">\n                <div id=\"userInfo-topScores\">\n                    <div id=\"color-hitting\">\n                        <h1>Color Hitting . . .</h1>\n                    </div>\n                    <div id=\"userInfo\">\n                        <h1>Welcome to the game...</h1>\n                        <div style={{display: 'flex'}}>\n                            <form onSubmit={this.handleSubmit}>\n                                <h3>Username:</h3>\n                                <input id=\"userInput\" type=\"text\" value={this.state.newUser.name} placeholder=\"Enter your name...\" onChange={this.handleUsernameChange}/>\n                                <input id=\"start\" type=\"submit\" value=\"Start\" />\n                            </form>\n                            <button style={{height: '25px', alignSelf: 'flex-end'}} onClick={this.handleRestart}>Restart</button>\n                        </div>\n                    </div>\n                    <div id=\"topScores\">\n                        <h1>Highest scores</h1>\n                        <hr/>\n                        <ol>\n                            {\n                                this.state.topScores.sort((a,b) => b.score - a.score).slice(0,5).map( (player,index) => {\n                                    \n                                    return <li key={player.id} id=\"score-list\" ><h1>{index + 1 + '. '}{player.name}</h1><h1>{player.score}</h1></li>\n                                })\n                            }\n                        </ol>\n                    </div>\n                </div>\n                <div id=\"main-game-div\">\n                    <div>\n                        <h2>Total chances - 10</h2>\n                    </div>\n                    <div>\n                        <hr/>\n                        <div style={{display: 'flex', flexWrap: 'wrap'}}>\n                            {\n                                (() => {\n                                    const boxes = []\n                                    for(let i = 1; i <= 9; i++){\n                                        boxes.push(<button style={divStyle} key={i} id={i} onClick={ () => {\n                                            this.state.clickedBoxId = i\n                                        }}></button>)\n                                    }\n                                    return boxes\n                                })()\n                            }\n                        </div>\n                        <hr/>\n                    </div>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <h2>Hits: {this.state.newUser.score}</h2>\n                        <h2>Remaining: {10 - this.state.total}</h2>  \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ColorHit","import React from 'react';\nimport './App.css';\nimport ColorHit from './components/ColorHit'\n\nfunction App(props) {\n  return (\n    <ColorHit />\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}